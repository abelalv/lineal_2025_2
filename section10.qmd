---
title: Autovalores y autovectores
format: html
filters:
  - pyodide
---



Operaciones con matrices $n \times n$

Dadas dos matrices $A$ y $B$ de tamaño $n \times n$, la suma de matrices se define como

$$
A + B = \begin{bmatrix}
a_{11} & a_{12} & \cdots & a_{1n} \\
a_{21} & a_{22} & \cdots & a_{2n} \\
\vdots & \vdots & \ddots & \vdots \\
a_{n1} & a_{n2} & \cdots & a_{nn}
\end{bmatrix}
+
\begin{bmatrix}
b_{11} & b_{12} & \cdots & b_{1n} \\
b_{21} & b_{22} & \cdots & b_{2n} \\
\vdots & \vdots & \ddots & \vdots \\
b_{n1} & b_{n2} & \cdots & b_{nn}
\end{bmatrix}
=
\begin{bmatrix}
a_{11} + b_{11} & a_{12} + b_{12} & \cdots & a_{1n} + b_{1n} \\
a_{21} + b_{21} & a_{22} + b_{22} & \cdots & a_{2n} + b_{2n} \\
\vdots & \vdots & \ddots & \vdots \\
a_{n1} + b_{n1} & a_{n2} + b_{n2} & \cdots & a_{nn} + b_{nn}
\end{bmatrix}
$$

### Multiplicación por escalar 

Dada una matriz $A$ de tamaño $n \times n$ y un escalar $c$, el producto de la matriz por el escalar se define como

$$
cA = c \begin{bmatrix}
a_{11} & a_{12} & \cdots & a_{1n} \\
a_{21} & a_{22} & \cdots & a_{2n} \\
\vdots & \vdots & \ddots & \vdots \\
a_{n1} & a_{n2} & \cdots & a_{nn}
\end{bmatrix}
=
\begin{bmatrix}
ca_{11} & ca_{12} & \cdots & ca_{1n} \\
ca_{21} & ca_{22} & \cdots & ca_{2n} \\
\vdots & \vdots & \ddots & \vdots \\
ca_{n1} & ca_{n2} & \cdots & ca_{nn}
\end{bmatrix}
$$

### Multiplicación de una matriz por un vector

Podemos multiplicar una matriz $A$ de tamaño $m \times n$ por un vector $v$ de tamaño $n \times 1$ para obtener un nuevo vector $w$ de tamaño $m \times 1$. La multiplicación se define como

$$
w = Av = \begin{bmatrix}
a_{11} & a_{12} & \cdots & a_{1n} \\
a_{21} & a_{22} & \cdots & a_{2n} \\
\vdots & \vdots & \ddots & \vdots \\
a_{m1} & a_{m2} & \cdots & a_{mn}
\end{bmatrix}
\begin{bmatrix}
v_1 \\
v_2 \\      
\vdots \\
v_n
\end{bmatrix}
=
\begin{bmatrix}
a_{11}v_1 + a_{12}v_2 + \cdots + a_{1n}v_n \\
a_{21}v_1 + a_{22}v_2 + \cdots + a_{2n}v_n \\
\vdots \\
a_{m1}v_1 + a_{m2}v_2 + \cdots + a_{mn}v_n
\end{bmatrix}
$$

### Multiplicación de matrices

Para multiplicar dos matrices $A$ y $B$  debe coincidir el tamaño de las columnas de la primera matriz con el tamaño de las filas de la segunda matriz. Si $A$ es de tamaño $m \times n$ y $B$ es de tamaño $n \times p$, entonces el producto de las matrices $A$ y $B$ es una matriz $C$ de tamaño $m \times p$, para realizar este producto podemos escribir la segunda matriz como columnas y multiplicar cada columna por la matriz $A$.


$$
C = AB = A [B_1, B_2, \ldots, B_p] = [AB_1, AB_2, \ldots, AB_p]
$$

donde $B_1, B_2, \ldots, B_p$ son las columnas de la matriz $B$.

### Matriz identidad

La matriz identidad $I$ es una matriz cuadrada de tamaño $n \times n$ con unos en la diagonal principal y ceros en las demás entradas. La matriz identidad cumple la propiedad de que al multiplicar cualquier matriz $A$ de tamaño $n \times n$ por la matriz identidad se obtiene la misma matriz $A$.

$$
AI = IA = A
$$

### Matriz inversa

Dada una matriz cuadrada $A$ de tamaño $n \times n$, la matriz inversa $A^{-1}$ es aquella que cumple la propiedad de que al multiplicarla por la matriz original se obtiene la matriz identidad.

$$
AA^{-1} = A^{-1}A = I
$$

### Calculo de la matriz inversa

Dada una matriz cuadrada $A$ de tamaño $n \times n$, encontrar la matriz inversa de $A$ es equivalente a resolver $n$ sistemas de ecuaciones lineales. Asi, para calcular la matriz inversas se puede encontrar con el siguiente algoritmo:

Para esta deducción podemos considerar que $A^{-1}=[x_1|x_2|\ldots|x_n]$ y que $e_1,e_2,\ldots,e_n$ son las columnas de la matriz identidad de tamaño $n \times n$. Entonces, la matriz inversa se puede encontrar a partir

$$
AA^{-1} = A[x_1|x_2|\ldots|x_n] = [Ax_1|Ax_2|\ldots|Ax_n] = [e_1|e_2|\ldots|e_n] = I
$$

Así el cálculo de la matriz inversa se puede realizar a partir de la resolución de $n$ sistemas de ecuaciones lineales de la forma 
$$Ax_1=e_1$$
$$Ax_2=e_2$$
$$Ax_3=e_3$$
$$\vdots$$
$$Ax_n=e_n$$

Aunque este procedimiento es dispendioso, podemos utilizar la eliminación gaussiana para encontrar la matriz inversa de una matriz cuadrada. El algoritmo para encontrar la matriz inversa de una matriz cuadrada $A$ de tamaño $n \times n$ es el siguiente:

1. Se construye la matriz $[A|I]$ donde $I$ es la matriz identidad de tamaño $n \times n$.
2. Se aplica eliminación gaussiana para obtener la matriz $[I|A^{-1}]$.
3. La matriz $A^{-1}$ es la matriz que se encuentra a la derecha de la barra vertical.

Note que esto es equivalente a resolver un $n$ sistemas de ecuaciones lineales de la forma $Ax = b$ donde $b$ es una columna de la matriz identidad.

### Ejemplo 

Dada la matriz $A = \begin{bmatrix} 1 & 2 &1 \\0& 1 & 4\\ 1&0&0 \end{bmatrix}$, encuentre la matriz inversa de $A$.

Para encontrar la matriz inversa de $A$ se puede resolver el sistema de ecuaciones lineales

$$
\begin{bmatrix}
1  & 2 &1 &|& 1 & 0 & 0 \\
0 & 1 & 4 &|& 0 & 1 & 0 \\
1 & 0 & 0 &|& 0 & 0 & 1
\end{bmatrix}
$$

Luego mediante operaciones elementales se puede encontrar la matriz inversa de $A$,
por ejemplo, si hacemos $F_3=F_3 - F_1$ obtenemos

$$
\begin{bmatrix}
1 & 2  &  1 &|& 1 & 0 & 0 \\
0 & 1  &  4 &|& 0 & 1 & 0 \\
0 & -2 & -1 &|& -1 & 0 & 1  
\end{bmatrix}
$$
Ahora, si hacemos $F_1=F_1-2F_2$ y $F_3=F_3+2F_2$ obtenemos

$$
\begin{bmatrix}
1 & 0 & -7 &|& 1 & -2 & 0 \\
0 & 1 & 4 &|& 0 & 1 & 0 \\
0 & 0 & 7 &|& -1 & 2 & 1
\end{bmatrix}
$$

Por ultimo si hacemos $F_2=F_2-4F_3/7$, $F_1=F_1+F_3$ y $F_3=F_3/7$ obtenemos

$$
\begin{bmatrix}
1 & 0 & 0 &|& 0 & 0 & 1 \\
0 & 1 & 0 &|& 0 & 1 & -4/7 \\
0 & 0 & 1 &|& -1/7 & 2/7 & 1/7
\end{bmatrix}
$$

Por lo tanto, la matriz inversa de $A$ es $A^{-1} = \begin{bmatrix} 0 & 0 & 1 \\ 0 & 1 & -4/7 \\ -1/7 & 2/7 & 1/7 \end{bmatrix}$.


Note que $A^{-1}A = I$ y $AA^{-1}=I$


### Ejercicio

Dada la matriz $A = \begin{bmatrix} 1 & 2 & 3 \\ 0 & 1 & 4 \\ 5 & 6 & 0 \end{bmatrix}$, encuentre la matriz inversa de $A$.


**De esta forma nos podemos preguntar** ¿Cuando una matriz cuadrada $A$ tiene inversa?

## Matriz escalonada por filas

Definimos una matriz escalonada como una matriz cuadrada $A$ de tamaño $m \times n$ que cumple las siguientes propiedades:

1. Todos los renglones cero están en la parte inferior de la matriz.
2. El elemento delantero de cada renglón diferente de cero está a la derecha del elemento delantero diferente de cero del renglón anterior.
3. El primer elemento diferente de 0 y 1 de cada fila está a la derecha del primer elemento diferente de 0.



### Ejemplo

Matriz escalonada

$$
\begin{bmatrix}
1 & 2 & 3 & 4 \\
0 & 1 & 2 & 3 \\
0 & 0 & 1 & 2 \\
0 & 0 & 0 & 1
\end{bmatrix}
$$

Matriz escalonada reducida

$$
\begin{bmatrix}
1 & 0 & 0 & 0 \\
0 & 1 & 0 & 0 \\
0 & 0 & 1 & 0 \\
0 & 0 & 0 & 1
\end{bmatrix}
$$

Matriz no escalonada

$$
\begin{bmatrix}
1 & 2 & 3 & 4 \\
0 & 1 & 2 & 3 \\
0 & 0 & 1 & 2 \\
1 & 0 & 0 & 1
\end{bmatrix}
$$



### Ejercicio

Dada la matriz $C = \begin{bmatrix} 1 & 2 & 3 \\ 0 & 1 & 4 \\ 5 & 6 & 0 \end{bmatrix}$, determine si la matriz $C$ es una matriz escalonada o una matriz escalonada reducida.

**Note que si una matriz cuadrada $A$ y se puede escribir como una matriz escalonada con todos los elementos de la diagonal principal diferentes de cero,    entonces la matriz $A$ tiene inversa.** ¿Por qué esta afirmación es cierta?

### Matrices con python 

```{python}
import numpy as np

# Supongamos que bw es tu matriz binaria (NumPy array o matrix)
A = np.array([[3, 2, 3], [2, 3, 3], [3, 3, 4]])
# 1️⃣ Dimensiones (filas, columnas)
filas, columnas = A.shape
print(f"Dimensiones: {filas} filas × {columnas} columnas")

# 2️⃣ Total de elementos (filas×columnas)
total = A.size
print(f"Total de elementos: {total}")

# 3️⃣ Elementos de la diagonal principal
diagonal = np.diag(A)
print(f"Elementos de la diagonal principal: {diagonal}")

# 4️⃣ ver un elemento de la matriz

print(f"Elemento en la fila 1 y columna 1: {A[0, 0]}")

print(f"Elemento en la fila 2 y columna 3: {A[1, 2]}")



```



## Solcuiones de sistemas de ecuaciones lineales con python

Quereos resolver el siguiente sistema de ecuaciones lineales

$$
\begin{align*}
3x + 2y +3z &= 1 \\
2x + 3y + 3z &= 2 \\
3x + 3y + 4z &= 3
\end{align*}
$$

```{pyodide-python}
import numpy as np

A = np.array([[3, 2, 3], [2, 3, 3], [3, 3, 4]])
b = np.array([1, 2, 3])

x = np.linalg.solve(A, b)
print(x)
```

## Ejercicio

Resuelva el siguiente sistema de ecuaciones lineales

$$
\begin{align*}
2x + 3y + 4z &= 1 \\
3x + 4y + 5z &= 2 \\
4x + 5y + 6z &= 3
\end{align*}
$$

## Encontrar la matriz inversa con python

Queremos encontrar la matriz inversa de la matriz $A = \begin{bmatrix} 1 & 2 & 3 \\ 0 & 1 & 4 \\ 5 & 6 & 0 \end{bmatrix}$.

```{pyodide-python}
import numpy as np

A = np.array([[1, 2, 3], [0, 1, 4], [5, 6, 0]])
A_inv = np.linalg.inv(A)
print(A_inv)
```

## Ejercicio

Encuentre la matriz inversa de la matriz $B = \begin{bmatrix} 1 & 2 & 3 \\ 0 & 1 & 4 \\ 5 & 6 & 0 \end{bmatrix}$.

## Matriz escalonada con python

Queremos determinar si la matriz $D = \begin{bmatrix} 1 & 2 & 3 \\ 0 & 1 & 4 \\ 5 & 6 & 0 \end{bmatrix}$ es una matriz escalonada.

```{pyodide-python}
import numpy as np
import matplotlib.pyplot as plt
from scipy.linalg import lu

A=np.array([[1,2,3],[0,1,4],[1,2,5]])

plt.spy(A)
plt.title("Diagrama de la matriz")
plt.xlabel("Columnas")
plt.ylabel("Filas")
plt.show()

_, _, U = lu(A)

plt.spy(U)
plt.title("Diagrama de la matriz")
plt.xlabel("Columnas")
plt.ylabel("Filas")
plt.show()
```
