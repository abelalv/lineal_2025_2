---
title: "Ejercicio computacional valores y vectores propios (Matrices 2x2)"
format: html
filters:
  - pyodide
---


# 1. **Matriz con Par√°metros:** Determina los valores propios y los vectores propios de la matriz  
   $$ A = \begin{bmatrix} 2 & a \\ 3 & 4 \end{bmatrix} $$
   en funci√≥n de $a$. Analiza los casos en los que los valores propios sean reales o complejos.  

# 2. **Matriz con Exponente:** Sea la matriz  
   $$ B = \begin{bmatrix} 5 & -2 \\ 1 & 3 \end{bmatrix} $$
   Calcula sus valores propios y usa ese resultado para encontrar  $B^n$ sin multiplicaciones sucesivas.  

# 3. **Propiedades de la Suma y Producto:**  
   $$ C = \begin{bmatrix} 1 & 2 \\ 3 & 4 \end{bmatrix}, \quad D = \begin{bmatrix} 2 & 0 \\ 0 & 3 \end{bmatrix} $$
   ¬øSe cumple que los valores propios de $C+D$ son la suma de los valores propios de $C$ y $D$?  

# 4. **Matriz Singular:** 
Encuentra una matriz no nula $A$ con un valor propio igual a cero. Interpreta geom√©tricamente su efecto sobre los vectores.  

# 5. Demuestra que si $A$ tiene valores propios $\lambda_1, \lambda_2$, entonces:  
   $$ \text{traza}(A) = \lambda_1 + \lambda_2, \quad \det(A) = \lambda_1 \lambda_2. $$  

# 6. De un ejemplo de matriz $2 \times 2$ que no sea diagonalizable y tenga 

    a. 1 Valores propio real.

    b. 2 Valores propios reales distintos.

    c. Valores propios complejos.




# 7. **üì≤ Redes Sociales y Difusi√≥n de Informaci√≥n**  
En el mundo digital, las noticias y rumores se propagan r√°pidamente a trav√©s de las redes sociales. Imagina que estamos analizando la difusi√≥n de una noticia entre **dos comunidades en l√≠nea**:  
- **Comunidad A**: Un grupo de influencers en Twitter.  
- **Comunidad B**: Un grupo de usuarios generales en Facebook.  
Cada d√≠a, una **porci√≥n de personas en cada comunidad cambia su percepci√≥n sobre la noticia** debido a la interacci√≥n con otros usuarios. Esta din√°mica se modela mediante la siguiente **matriz de transici√≥n**:  

$$
A = \begin{bmatrix} 0.9 & 0.1 \\ 0.2 & 0.8 \end{bmatrix}
$$  

Donde:  

| Entrada  | Descripci√≥n |
|----------|----------------------------------------------------------|
| **0.9**  | El 90% de la comunidad A mantiene su opini√≥n actual al d√≠a siguiente. |
| **0.1**  | El 10% de la comunidad A adopta la opini√≥n de la comunidad B. |
| **0.2**  | El 20% de la comunidad B adopta la opini√≥n de la comunidad A. |
| **0.8**  | El 80% de la comunidad B mantiene su opini√≥n actual. |

### **Pregunta**  
¬øEste sistema alcanza un estado estable? Es decir, ¬øllegar√° un momento en que la proporci√≥n de personas en cada comunidad con la noticia se mantenga constante? Antes de responder estas preguntas, debes hacer un plan para encontrar la respuesta, escribela.


# 8. **üìà Aplicaci√≥n en Econom√≠a: Modelado de Mercados Interdependientes**  

### **üìå Contexto: Evoluci√≥n de Precios en Dos Sectores Econ√≥micos**  

En econom√≠a, los precios de bienes y servicios est√°n interconectados. Por ejemplo, el precio de los metales afecta el costo de fabricaci√≥n de autom√≥viles, y el precio de la energ√≠a impacta la producci√≥n industrial.  

Imaginemos un modelo simplificado de **dos sectores econ√≥micos**:  

- **Sector A**: Producci√≥n de materias primas (metales, petr√≥leo, insumos b√°sicos).  
- **Sector B**: Producci√≥n industrial (autos, electrodom√©sticos, maquinaria).  

Cada periodo, los precios en estos sectores cambian en funci√≥n de la oferta y la demanda, siguiendo la **matriz de transici√≥n de precios**:

$$
P_{n+1} = A P_n
$$

donde $P_n$ representa los precios en el periodo $n$ y la **matriz de influencia** $A$ es:

$$
A = \begin{bmatrix} 0.8 & 0.3 \\ 0.2 & 0.7 \end{bmatrix}
$$

Cada entrada de $A$ indica c√≥mo el precio de un sector influye en s√≠ mismo y en el otro sector.  

- **0.8**: El 80% del precio en el sector A depende de su propio precio del per√≠odo anterior.  
- **0.3**: El 30% del precio en el sector A depende del precio del sector B del per√≠odo anterior.  
- **0.2**: El 20% del precio en el sector B depende del precio del sector A del per√≠odo anterior.  
- **0.7**: El 70% del precio en el sector B depende de su propio precio del per√≠odo anterior.  

---

## **üìå Preguntas**  

1. ¬øC√≥mo evolucionar√°n los precios en el largo plazo?  
2. ¬øSe alcanzar√° un equilibrio en los precios?  
3. Encuentra los **valores propios y vectores propios** de la matriz $A$ y explica como podr√≠an ayudar a responder las preguntas anteriores. 
4. Coloca una condiciones iniciales para los precios y calcula los precios en el largo plazo.  


# 9. **üèóÔ∏è Responde si es falso o verdadero, recuerde que el contexto A es una matriz $2\times 2$**

a. Si $A$ es una matriz sim√©trica, entonces sus valores propios son reales.

b. Si el sistema $Ax=b$ tiene infinitas soluciones entonces $A$ tiene un valor propio igual a cero.

c. Si una matriz es diagonalizable, entonces sus valores propios son reales.

d. Si $A$ tiene un valor propio igual a cero, entonces $A^{-1}$  no existe.

e. Si $A$ tiene un valor propio igual a cero y otro diferente, entonces $A$ es no es diagonalizable.


# 10. **üè† Gr√°fica la figura que esta formada por los puntos**

Observa la figura que se forma al unir los puntos en el plano cartesiano.

```{python}
#| echo: false
import matplotlib.pyplot as plt

# Crear la figura y los ejes
fig, ax = plt.subplots(figsize=(6, 6))

# **Dibujar las paredes de la casa** (cuadrado)
paredes_x = [2, 6, 6, 2, 2]
paredes_y = [1, 1, 4, 4, 1]
plt.plot(paredes_x, paredes_y, 'brown', linewidth=3)

# **Dibujar el techo** (tri√°ngulo)
techo_x = [2, 4, 6, 2]
techo_y = [4, 6, 4, 4]
plt.plot(techo_x, techo_y, 'darkred', linewidth=3)



# **Configurar el gr√°fico**
ax.set_xlim(0, 8)
ax.set_ylim(0, 7)
ax.set_aspect('equal')
plt.grid(True)
plt.xlabel('X')
plt.ylabel('Y')
plt.title('üè† Casita en el Plano Cartesiano')

# **Mostrar la gr√°fica**
plt.show()

```
Esta figura se rota como se muestra en la siguiente gr√°fica.
```{python}
#| echo: false
import numpy as np

# Funci√≥n para rotar puntos 90 grados en sentido antihorario
def rotar_90_grados(x, y):
    matriz_rotacion = np.array([[0, -1], [1, 0]])
    puntos = np.vstack((x, y))
    puntos_rotados = matriz_rotacion @ puntos
    return puntos_rotados[0, :], puntos_rotados[1, :]

# Rotar las paredes
paredes_x_rot, paredes_y_rot = rotar_90_grados(paredes_x, paredes_y)
plt.plot(paredes_x_rot, paredes_y_rot, 'brown', linewidth=3)

# Rotar el techo
techo_x_rot, techo_y_rot = rotar_90_grados(techo_x, techo_y)
plt.plot(techo_x_rot, techo_y_rot, 'darkred', linewidth=3)

# Configurar el gr√°fico
ax.set_xlim(-7, 7)
ax.set_ylim(-7, 7)
ax.set_aspect('equal')
plt.grid(True)
plt.xlabel('X')
plt.ylabel('Y')
plt.title(' Casita Rotada 90 Grados en el Plano Cartesiano')

# Mostrar la gr√°fica
plt.show()
```

Encuentre la matriz de rotaci√≥n que se utiliz√≥ para rotar la figura.